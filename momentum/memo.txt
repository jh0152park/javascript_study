console.log(document.getElementById("title"));
console.log(document.getElementById("title").textContent);
console.dir(document.getElementById("title"));


console.log는 print처럼 콘솔에 출력을 해주는 함수
console.dir은 인자로 넘겨준 object에 어떤 속성? 인자? 들이 있는지 볼 수 있음 (python에서 dict나 class를 출력한것 처럼)
그래서 console.dir(document.getElementById("title")); 이렇게 사용하면, title이라는 id를 갖고있는 tag에 어떤 속성들이 있는지 다 볼 수 있음

그래서 textContent라는게 있구나 라는것도 알 수 있음! 당연하게도 JS단에서

################################################################
################################################################

querySelector, querySelectorAll 함수를 사용하면 CSS Selector를 이용해서 원하는 tag들을 갖고올 수 있다.
당연하게도 id, class이름도 사용가능함! #id name or .class name

querySelector는 매칭되는 1개의 반환값을 돌려주고, querySelectorAll은 list형대로 매칭되는 다수의 값을 반환해준다
추가로 CSS Selector처럼 사용하기에 .class h1:first-child 와 같이도 사용이 가능하다.

################################################################
################################################################

const title = document.querySelector("#title");

function handleTitleClick() {
    title.style.color = "red";
}

function mouseenter() {
    console.log("mouse is here!");
}

title.addEventListener("click", handleTitleClick);
title.addEventListener("mouseenter", mouseenter);

위와같이 addEventListener를 등록할 수 있음

그리고 window.addEventListener또한 기본적으로 사용할 수 있는데
reize와 같이 화면의 크기가 바뀔때 사용하는 addEventListener도 있고, copy가 될때 사용하는 등 다양한 addEventListener들이 존재함

추가적으로 JS에서 html body에 접근하고자 한다면, document.body로 접근할 수 있음.

또, wifi disconnected or connected를 감지하는 event들도 있고, 이는 mdn사이트가서 찾아보면됨 (online, offline)